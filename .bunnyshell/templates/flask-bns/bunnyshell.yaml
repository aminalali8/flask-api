kind: Environment
name: Flask-FullStack-API-Draft
type: primary
components:
    -
        kind: Application
        name: celery-worker
        gitRepo: 'https://github.com/aminalali8/flask-api.git'
        gitBranch: main
        gitApplicationPath: /
        dockerCompose:
            build:
                context: .
                dockerfile: flask-base-main/celery/Dockerfile
            environment:
                APP_SETTINGS: project.config.DevelopmentConfig
                CELERY_BROKER_TEST_URL: 'amqp://rabbitmq:rabbitmq@message-broker-service:5672/flask_base_test'
                CELERY_BROKER_URL: 'amqp://rabbitmq:rabbitmq@message-broker-service:5672/flask_base_dev'
                DATABASE_TEST_URL: 'postgresql://postgres:postgres@flask-base-db:5432/flask_base_test'
                DATABASE_URL: 'postgresql://postgres:postgres@flask-base-db:5432/flask_base_dev'
                FLASK_APP: project/__init__.py
                FLASK_DEBUG: '1'
                FLASK_ENV: docker
            
    -
        kind: Database
        name: flask-base-db
        gitRepo: 'https://github.com/aminalali8/flask-api.git'
        gitBranch: main
        gitApplicationPath: flask-base-api/db
        dockerCompose:
            build:
                context: ./flask-base-api/db
                dockerfile: Dockerfile
            environment:
                POSTGRES_PASSWORD: postgres
                POSTGRES_USER: postgres
            healthcheck:
                test: 'exit 0'
            ports:
                - '5435:5432'
        volumes:
            -
                name: postgres-data
                mount: /data/postgres
                subPath: ''
    -
        kind: Application
        name: flask-base-service
        gitRepo: 'https://github.com/aminalali8/flask-api.git'
        gitBranch: main
        gitApplicationPath: flask-base-api
        dockerCompose:
            build:
                context: ./flask-base-api
                dockerfile: Dockerfile
                target: prod
            environment:
                APP_SETTINGS: project.config.DevelopmentConfig
                CELERY_BROKER_TEST_URL: 'amqp://rabbitmq:rabbitmq@message-broker-service:5672/flask_base_test'
                CELERY_BROKER_URL: 'amqp://rabbitmq:rabbitmq@message-broker-service:5672/flask_base_dev'
                DATABASE_TEST_URL: 'postgresql://postgres:postgres@flask-base-db:5432/flask_base_test'
                DATABASE_URL: 'postgresql://postgres:postgres@flask-base-db:5432/flask_base_dev'
             
                FLASK_APP: project/__init__.py
                FLASK_DEBUG: '1'
                FLASK_ENV: docker
               
            ports:
                - '5001:5000'
        hosts:
            -
                hostname: 'flask-base-service-{{ env.base_domain }}'
                path: /
                servicePort: 5001
    -
        kind: Application
        name: message-broker-service
        gitRepo: 'https://github.com/aminalali8/flask-api.git'
        gitBranch: main
        gitApplicationPath: flask-base-main/rabbitmq
        dockerCompose:
            build:
                context: ./flask-base-main/rabbitmq
                dockerfile: Dockerfile
            environment:
                RABBITMQ_DEFAULT_PASS: rabbitmq
                RABBITMQ_DEFAULT_USER: rabbitmq
                RABBITMQ_DEFAULT_VHOST: flask_base_dev
            ports:
                - '5675:5672'
                - '15675:15672'
        hosts:
            -
                hostname: 'message-broker-service-{{ env.base_domain }}'
                path: /
                servicePort: 5675
        volumes:
            -
                name: rabbitmq-data
                mount: /data/rabbitmq
                subPath: ''
    -
        kind: Application
        name: nginx
        gitRepo: 'https://github.com/aminalali8/flask-api.git'
        gitBranch: main
        gitApplicationPath: flask-base-main/nginx
        dockerCompose:
            build:
                context: ./flask-base-main/nginx
            ports:
                - '80:80'
            restart: always
        hosts:
            -
                hostname: 'nginx-{{ env.base_domain }}'
                path: /
                servicePort: 80
    -
        kind: Database
        name: redis-db
        gitRepo: 'https://github.com/aminalali8/flask-api.git'
        gitBranch: main
        gitApplicationPath: flask-base-main/redis
        dockerCompose:
            build:
                context: ./flask-base-main/redis
                dockerfile: Dockerfile
            ports:
                - '6375:6379'
        volumes:
            -
                name: redis-data
                mount: /data/redis
                subPath: ''
    -
        kind: Application
        name: swagger
        gitRepo: 'https://github.com/aminalali8/flask-api.git'
        gitBranch: main
        gitApplicationPath: flask-base-swagger
        dockerCompose:
            build:
                context: ./flask-base-swagger
                dockerfile: Dockerfile
            environment:
                SWAGGER_JSON: swagger.yml
            ports:
                - '8080:8080'
        hosts:
            -
                hostname: 'swagger-{{ env.base_domain }}'
                path: /
                servicePort: 8080
volumes:
    -
        name: postgres-data
        size: 1Gi
        type: disk
    -
        name: rabbitmq-data
        size: 1Gi
        type: disk
    -
        name: redis-data
        size: 1Gi
        type: disk
